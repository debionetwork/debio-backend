name: Deployer

on:
  workflow_call:
    inputs:
      environment_name:
        type: string
        required: true
      environment_url:
        type: string
        required: false
      docker_image_name:
        type: string
        required: true
      docker_image_version:
        type: string
        required: true
    secrets:
      gcp_project_id:
        required: true
      gcp_workload_identity_provider:
        required: true
      gcp_workload_service_account:
        required: true
      gke_cluster_name:
        required: true
      gke_location:
        required: true
      gce_bastion_instance_name:
        required: true
      gce_bastion_instance_zone:
        required: true

concurrency:
  group: deployer-${{ inputs.environment_name }}

permissions:
  contents: read

jobs:
  gke:
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ inputs.environment_name }}
      url: ${{ inputs.environment_url }}
    runs-on: ubuntu-20.04
    name: GKE
    steps:
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
        with:
          fetch-depth: 0
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@dac4e13deb3640f22e3ffe758fd3f95e6e89f712 # v0.8.1
        with:
          workload_identity_provider: ${{ secrets.gcp_workload_identity_provider }}
          service_account: ${{ secrets.gcp_workload_service_account }}
      - name: Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb # v0.6.0
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@054fdb05e32039f72764f03e69e6acb20caa6f56 # v0.8.0
        with:
          cluster_name: ${{ secrets.gke_cluster_name }}
          location: ${{ secrets.gke_location }}
          use_internal_ip: true
          use_auth_provider: true
      - name: Tunneling SSH connections
        run: |
          gcloud compute ssh ${{ secrets.gce_bastion_instance_name }} \
            --project=${{ secrets.gcp_project_id }} \
            --zone ${{ secrets.gce_bastion_instance_zone }} \
            --ssh-flag '-4 -L 8888:127.0.0.1:8888 -N -q -f' \
            --tunnel-through-iap \
            --quiet
      - name: Set Up Helm
        id: setup-helm
        uses: azure/setup-helm@b5b231a831f96336bbfeccc1329990f0005c5bb1 # v3.3
        with:
          version: v3.10.0
      - name: Perform Deployment
        run: |
          helm repo add debionetwork https://charts.debio.network
          helm repo update
          HTTPS_PROXY=127.0.0.1:8888 helm upgrade ${{ github.event.repository.name }} debionetwork/debio-app-deployer \
            --install \
            --set-string nameOverride=${{ github.event.repository.name }} \
            --set-string image.repository=docker.io/${{ inputs.docker_image_name }} \
            --set-string image.tag=${{ inputs.docker_image_version }} \
            --set-string serviceAccount.name=${{ github.event.repository.name }} \
            --set-string serviceAccount.annotations.'iam\.gke\.io/gcp-service-account'=${{ github.event.repository.name }}@${{ secrets.gcp_project_id }}.iam.gserviceaccount.com \
            --set config.secretsStore.enabled=true \
            --set-string config.secretsStore.providerClass=${{ github.event.repository.name }}-secrets-store-provider \
            --set-string config.secretsStore.name=${{ github.event.repository.name }}-secrets-store \
            --set containerPort=3000 \
            --set service.port=3000 \
            --set-string resources.requests.cpu=100m \
            --set-string resources.requests.memory=512Mi \
            --set-string resources.limits.cpu=300m \
            --set-string resources.limits.memory=1024Mi \
            --set replicaCount=1 \
            --set autoscaling.enabled=true \
            --set autoscaling.minReplicas=1 \
            --set autoscaling.maxReplicas=5 \
            --set-string nodeSelector.node_pool=general \
            --set-string nodeSelector.'iam\.gke\.io/gke-metadata-server-enabled'='true'
          HTTPS_PROXY=127.0.0.1:8888 kubectl rollout status deployment/${{ github.event.repository.name }}
      - name: Clean Up Tunneling SSH Connections
        if: always()
        run: |
          kill -9 $(lsof -ti:8888)
          gcloud compute os-login ssh-keys remove --key-file=/home/runner/.ssh/google_compute_engine.pub
