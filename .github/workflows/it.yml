name: Integration Tester Automation

on:
  issue_comment:
    types:
    - created

concurrency:
  group: it-e2e-tester-${{ github.event.pull_request.number }}

jobs:
  start-runner:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/it'}}
    environment: development
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Start Runner
        run: gcloud compute instances start gh-runner --zone=asia-southeast1-b
        
  testing:
    runs-on: [self-hosted]
    needs: [start-runner]
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/it'}}
    environment: development
    strategy:
      matrix:
        node-version: ['16']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create .env File
        shell: bash
        run: |
          tee -a .env <<EOF
          ${{ secrets.FULL_ENV }}
          EOF
      - name: Create service-account-file.json File
        shell: bash
        run: |
          tee -a service-account-file.json <<EOF
          ${{ secrets.SERVICE_ACCOUNT_FILE_JSON }}
          EOF
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm install
      - name: Run Integration Tests
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./service-account-file.json
        run: npm run test:e2e

  stop-runner:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/it'}}
    environment: development
    permissions:
      contents: 'read'
      id-token: 'write'
    needs: [testing]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Stop Runner
        run: gcloud compute instances stop gh-runner --zone=asia-southeast1-b
